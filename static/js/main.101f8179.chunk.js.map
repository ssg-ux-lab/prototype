{"version":3,"sources":["components/atoms/PageTransition/PageTransitionRouter.tsx","components/atoms/PageTransition/PageTransition.tsx","components/templates/ApplicationTemplate.tsx","components/pages/ApplicationPage.tsx","components/templates/MainTemplate.tsx","components/pages/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageTransitionRouter","children","location","AnimatePresence","initial","exitBeforeEnter","key","PageTransition","props","motion","div","animate","exit","ApplicationTemplate","ApplicationPage","MainTemplate","id","TodayPage","Layout","p","mb","spacing","as","ReachLink","to","textDecoration","App","MainPage","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TagManager","initialize","gtmId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAeeA,EAXc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC5B,cAAC,IAAD,UACE,gBAAGC,EAAH,EAAGA,SAAH,OACA,cAACC,EAAA,EAAD,CAAiBC,SAAS,EAAOC,iBAAe,EAAhD,SACC,cAAC,IAAD,CAAQH,SAAUA,EAAlB,SACED,GAD+BC,EAASI,W,SCG/BC,EARQ,SAACC,GACvB,OACC,cAACC,EAAA,EAAOC,IAAR,CAAYN,QAAQ,UAAUO,QAAQ,UAAUC,KAAK,OAArD,SACEJ,EAAMP,YCGKY,EAJa,SAACL,GAC5B,OAAO,cAAC,EAAD,iECIOM,EAJS,SAACN,GACxB,OAAO,cAAC,EAAD,K,SCWOO,EAZM,SAACP,GACrB,OACC,eAAC,EAAD,+DAEC,eAAC,IAAD,WACC,cAAC,IAAD,CAAQQ,GAAG,UAAX,iEACA,cAAC,IAAD,CAAQA,GAAG,UAAX,wECFWC,EAJG,SAACT,GAClB,OAAO,cAAC,EAAD,KCAFU,EAAS,SAACV,GAAD,OACd,eAAC,IAAD,CAAKW,EAAG,EAAR,UACC,eAAC,IAAD,CAAQC,GAAI,EAAGC,QAAS,EAAxB,UACC,cAAC,IAAD,CAAMC,GAAIC,IAAWC,GAAG,IAAIC,eAAe,YAA3C,0BADD,IAKC,cAAC,IAAD,CAAMH,GAAIC,IAAWC,GAAG,eAAeC,eAAe,YAAtD,6BAIAjB,EAAMP,aAeMyB,MAXf,WACC,OACC,cAAC,EAAD,UACC,eAAC,EAAD,WACC,cAACC,EAAD,CAAUC,KAAK,MACf,cAAC,EAAD,CAAiBA,KAAK,uBCbXC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCMdQ,EAAWC,WAHY,CACtBC,MAAO,gBAKRC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,UACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAMzBhB,M","file":"static/js/main.101f8179.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Router, Location } from '@reach/router';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nconst PageTransitionRouter = ({ children }: { children: React.ReactNode }) => (\r\n\t<Location>\r\n\t\t{({ location }) => (\r\n\t\t\t<AnimatePresence initial={false} exitBeforeEnter>\r\n\t\t\t\t<Router location={location} key={location.key}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Router>\r\n\t\t\t</AnimatePresence>\r\n\t\t)}\r\n\t</Location>\r\n);\r\nexport default PageTransitionRouter;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst PageTransition = (props: React.HTMLProps<HTMLElement>) => {\r\n\treturn (\r\n\t\t<motion.div initial=\"initial\" animate=\"animate\" exit=\"exit\">\r\n\t\t\t{props.children}\r\n\t\t</motion.div>\r\n\t);\r\n};\r\n\r\nexport default PageTransition;\r\n","import React, { ReactNode } from 'react';\r\nimport PageTransition from '../atoms/PageTransition/PageTransition';\r\n\r\ninterface Props {}\r\n\r\nconst ApplicationTemplate = (props: Props) => {\r\n\treturn <PageTransition>신청페이지 템플릿</PageTransition>;\r\n};\r\n\r\nexport default ApplicationTemplate;\r\n","import React from 'react';\r\nimport { RouteComponentProps } from '@reach/router';\r\nimport ApplicationTemplate from '../templates/ApplicationTemplate';\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst ApplicationPage = (props: Props) => {\r\n\treturn <ApplicationTemplate />;\r\n};\r\n\r\nexport default ApplicationPage;\r\n","import React from 'react';\r\nimport { Button, Stack } from '@chakra-ui/react';\r\nimport PageTransition from '../atoms/PageTransition/PageTransition';\r\n\r\ninterface Props {}\r\n\r\nconst MainTemplate = (props: Props) => {\r\n\treturn (\r\n\t\t<PageTransition>\r\n\t\t\t메인페이지 템플릿\r\n\t\t\t<Stack>\r\n\t\t\t\t<Button id=\"primary\">첫 번째 버튼입니다.</Button>\r\n\t\t\t\t<Button id=\"primary\">두 번째 버튼입니다.</Button>\r\n\t\t\t</Stack>\r\n\t\t</PageTransition>\r\n\t);\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React from 'react';\r\nimport { RouteComponentProps } from '@reach/router';\r\nimport MainTemplate from '../templates/MainTemplate';\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst TodayPage = (props: Props) => {\r\n\treturn <MainTemplate />;\r\n};\r\n\r\nexport default TodayPage;\r\n","import React from 'react';\r\nimport { Box, HStack, Link } from '@chakra-ui/react';\r\nimport { Link as ReachLink } from '@reach/router';\r\nimport PageTransitionRouter from './components/atoms/PageTransition/PageTransitionRouter';\r\nimport ApplicationPage from './components/pages/ApplicationPage';\r\nimport MainPage from './components/pages/MainPage';\r\n\r\nconst Layout = (props: React.HTMLProps<HTMLElement>) => (\r\n\t<Box p={5}>\r\n\t\t<HStack mb={5} spacing={2}>\r\n\t\t\t<Link as={ReachLink} to=\"/\" textDecoration=\"underline\">\r\n\t\t\t\t메인\r\n\t\t\t</Link>\r\n\t\t\t|\r\n\t\t\t<Link as={ReachLink} to=\"/application\" textDecoration=\"underline\">\r\n\t\t\t\t신청\r\n\t\t\t</Link>\r\n\t\t</HStack>\r\n\t\t{props.children}\r\n\t</Box>\r\n);\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<PageTransitionRouter>\r\n\t\t\t\t<MainPage path=\"/\" />\r\n\t\t\t\t<ApplicationPage path=\"/application\" />\r\n\t\t\t</PageTransitionRouter>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\n\r\n/* ----------------------여기부터-------------------------- */\r\n//GTM(구글 태그 매니저의 약자)을 임포트했습니다.\r\n//태그 매니저란 : 구글 애널리틱스와 연동하여 '클릭량', '전환율', '스크롤 깊이' 등등... 일종의 리액팅 코드를 만드는 곳!\r\nimport TagManager from 'react-gtm-module';\r\n\r\n//구글 태그 매니저 계정과 연동\r\nconst tagManagerArgs = {\r\n\tgtmId: 'GTM-56LC65P',\r\n};\r\nTagManager.initialize(tagManagerArgs);\r\n/* -----------------------여기까지가 끝! 초간단------------------------- */\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ChakraProvider>\r\n\t\t\t<App />\r\n\t\t</ChakraProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}